{
  "Description": "CAS ERD SVC deployment for matsonlabs",
  "Resources": {
    "SG0fromcaserdsvcstackLBSecurityGroupB4CD3F5D80806B9F14CF": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": "sg-0a97935f67ae5717e",
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/SG0/from caserdsvcstackLBSecurityGroupB4CD3F5D:8080"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          "subnet-103d3874",
          "subnet-c56802b2"
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "IaC",
            "Value": "true"
          },
          {
            "Key": "Project",
            "Value": "cas-erd-svc"
          }
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LB/Resource"
      }
    },
    "LBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB caserdsvcstackLB767368A3",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "IaC",
            "Value": "true"
          },
          {
            "Key": "Project",
            "Value": "cas-erd-svc"
          }
        ],
        "VpcId": "vpc-42de9927"
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LB/SecurityGroup/Resource"
      }
    },
    "LBSecurityGrouptocaserdsvcstackSG091C11CC7808041496157": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": "sg-0a97935f67ae5717e",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LB/SecurityGroup/to caserdsvcstackSG091C11CC7:8080"
      }
    },
    "LBListener49E825B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBListenerECSGroup1D445DF5"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LB/Listener/Resource"
      }
    },
    "LBListenerECSGroup1D445DF5": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/casreferenceservice/",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "Matcher": {
          "HttpCode": "200"
        },
        "Port": 8080,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "IaC",
            "Value": "true"
          },
          {
            "Key": "Project",
            "Value": "cas-erd-svc"
          }
        ],
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 3,
        "VpcId": "vpc-42de9927"
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LB/Listener/ECSGroup/Resource"
      }
    },
    "LBSecurityGroup4464B654": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for the internal ALB",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.120.0.0/24",
            "Description": "Allow HTTP from 10.120.0.0/24",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": "vpc-42de9927"
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LBSecurityGroup/Resource"
      }
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "cas-erd-svc-matsonlabs-cluster",
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/Cluster/Resource"
      }
    },
    "LogGroupF5B46931": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/ecs/cas-erd-svc",
        "RetentionInDays": 30
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/LogGroup/Resource"
      }
    },
    "TaskExecutionRole250D2532": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/TaskExecutionRole/Resource"
      }
    },
    "TaskExecutionRoleDefaultPolicyA84DD1B0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LogGroupF5B46931",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TaskExecutionRoleDefaultPolicyA84DD1B0",
        "Roles": [
          {
            "Ref": "TaskExecutionRole250D2532"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/TaskExecutionRole/DefaultPolicy/Resource"
      }
    },
    "TaskRole30FC0FBB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/TaskRole/Resource"
      }
    },
    "TaskRoleDefaultPolicy07FC53DE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:ListSecretVersionIds",
                "secretsmanager:ListSecrets"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:secretsmanager:us-west-2:275416279984:secret:*"
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:kms:us-west-2:275416279984:key/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TaskRoleDefaultPolicy07FC53DE",
        "Roles": [
          {
            "Ref": "TaskRole30FC0FBB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/TaskRole/DefaultPolicy/Resource"
      }
    },
    "TaskDef54694570": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "APP_ENV",
                "Value": "dev"
              },
              {
                "Name": "AWS_DEFAULT_REGION",
                "Value": "us-west-2"
              },
              {
                "Name": "AWS_REGION",
                "Value": "us-west-2"
              },
              {
                "Name": "AWS_SDK_LOAD_CONFIG",
                "Value": "1"
              },
              {
                "Name": "AWS_ENABLE_ENDPOINT_DISCOVERY",
                "Value": "true"
              }
            ],
            "Essential": true,
            "Image": "275416279984.dkr.ecr.us-west-2.amazonaws.com/cas-erd-svc:2.0.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "LogGroupF5B46931"
                },
                "awslogs-stream-prefix": "cas-erd-svc",
                "awslogs-region": "us-west-2"
              }
            },
            "Name": "cas-erd-svc",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "TaskExecutionRole250D2532",
            "Arn"
          ]
        },
        "Family": "caserdsvcstackTaskDef415A0221",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "TaskRole30FC0FBB",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/TaskDef/Resource"
      }
    },
    "ServiceDiscoveryNamespace8AEF4AC1": {
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
      "Properties": {
        "Description": "Service discovery namespace for cas-erd-svc",
        "Name": "caserd.local",
        "Vpc": "vpc-42de9927"
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/ServiceDiscoveryNamespace/Resource"
      }
    },
    "FargateServiceAC2B3B85": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "cas-erd-svc",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "LBListenerECSGroup1D445DF5"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              "sg-0a97935f67ae5717e"
            ],
            "Subnets": [
              "subnet-103d3874",
              "subnet-c56802b2"
            ]
          }
        },
        "ServiceName": "cas-erd-svc",
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "FargateServiceCloudmapService9544B753",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "TaskDef54694570"
        }
      },
      "DependsOn": [
        "LBListenerECSGroup1D445DF5",
        "LBListener49E825B4",
        "TaskRoleDefaultPolicy07FC53DE",
        "TaskRole30FC0FBB"
      ],
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/FargateService/Service"
      }
    },
    "FargateServiceCloudmapService9544B753": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ServiceDiscoveryNamespace8AEF4AC1",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "cas-erd-svc",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ServiceDiscoveryNamespace8AEF4AC1",
            "Id"
          ]
        }
      },
      "DependsOn": [
        "TaskRoleDefaultPolicy07FC53DE",
        "TaskRole30FC0FBB"
      ],
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/FargateService/CloudmapService/Resource"
      }
    },
    "FargateServiceTaskCountTarget8CF96FEA": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 2,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "ClusterEB0386A7"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "FargateServiceAC2B3B85",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": "arn:aws:iam::275416279984:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "DependsOn": [
        "TaskRoleDefaultPolicy07FC53DE",
        "TaskRole30FC0FBB"
      ],
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/FargateService/TaskCount/Target/Resource"
      }
    },
    "FargateServiceTaskCountTargetCpuScaling086750CA": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "caserdsvcstackFargateServiceTaskCountTargetCpuScalingBBCFB804",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "FargateServiceTaskCountTarget8CF96FEA"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "DependsOn": [
        "TaskRoleDefaultPolicy07FC53DE",
        "TaskRole30FC0FBB"
      ],
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/FargateService/TaskCount/Target/CpuScaling/Resource"
      }
    },
    "FargateServiceTaskCountTargetMemoryScaling536CA002": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "caserdsvcstackFargateServiceTaskCountTargetMemoryScalingCFFDBE70",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "FargateServiceTaskCountTarget8CF96FEA"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "DependsOn": [
        "TaskRoleDefaultPolicy07FC53DE",
        "TaskRole30FC0FBB"
      ],
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/FargateService/TaskCount/Target/MemoryScaling/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21QTW/CMAz9LdxDxrrLrgO2aRLaEOU+mdRUpiGp4qQIRfnvEw1f3Xby87Pf85MLWUye5GQEBx6rqhlr2shYelCNgAN/R1ROrrC1TN664xQYBapCxtnWlKiCI398dza0H6Z2yCwGpPi99Yd47VVJoAb2pLSFagMajCJTd4WML22rSYEnaxYWqmk/Q3fyGfT3e8QezXnngu/ma3A1+mucuzYJVCzjTAf2WX+Bb+Bq8LgGbua4JUMno6weMtZ4IIPujjtrS3QdKcwfyLBUoGGje9uZDcYnoW3NMi5sfc13wUkQ7GVcWd179HVpNanjqc0oCc7WFbGyHbqjjEtHHXicG/6EPXILOcN/9N+IScDtcRC8ZQWaTC3jLfvpfb1kyOSydqAaMnWZdbfAAyIlsUK2weXjX8G3wSdhbIVyxw9dMZGPz3Iy2jHR2AXjaY9ylesPiZ87RsECAAA="
      },
      "Metadata": {
        "aws:cdk:path": "cas-erd-svc-stack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "LoadBalancerDNS": {
      "Description": "Application Load Balancer DNS name",
      "Value": {
        "Fn::GetAtt": [
          "LB8A12904C",
          "DNSName"
        ]
      }
    },
    "ECSServiceName": {
      "Description": "ECS Service name",
      "Value": {
        "Fn::GetAtt": [
          "FargateServiceAC2B3B85",
          "Name"
        ]
      }
    },
    "ECSClusterName": {
      "Description": "ECS Cluster name",
      "Value": {
        "Ref": "ClusterEB0386A7"
      }
    },
    "VPCId": {
      "Description": "VPC ID being used",
      "Value": "vpc-42de9927"
    },
    "SecurityGroupId": {
      "Description": "Security Group ID being used",
      "Value": "sg-0a97935f67ae5717e"
    },
    "ImageTag": {
      "Description": "Docker image tag being used",
      "Value": "2.0.0"
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}