# values-matsonlabs.yaml for cas-erd-svc deployment (Private IP Only)
# Usage: cdk deploy -c valuesFile=examples/values-matsonlabs.yaml
# Values extracted from matsonlabs environment in cdk.json
# IAM permissions based on existing CDK stack implementation

# --- Metadata ---
metadata:
  name: "cas-erd-svc"
  version: "2.0.0"
  description: "CAS ERD Service - MatsonLabs Environment"

# --- Infrastructure ---
infrastructure:
  vpc:
    id: "vpc-42de9927"
    subnets: ["subnet-103d3874", "subnet-c56802b2"]
  securityGroups:
    - id: "sg-0a97935f67ae5717e"
    - name: "cas-erd-svc-sg"
      rules:
        - port: 443
          cidr: "10.120.0.0/24"

# --- ECS Cluster ---
cluster:
  name: "cas-erd-svc-cluster"
  containerInsights: true

# --- Task Definition ---
taskDefinition:
  type: "FARGATE"
  cpu: 512
  memory: 1024
  runtimePlatform:
    cpuArchitecture: "X86_64"
    os: "LINUX"
  containers:
    - name: "app"
      image: "275416279984.dkr.ecr.us-west-2.amazonaws.com/cas-erd-svc:2.0.0"
      portMappings:
        - containerPort: 8080
          protocol: "tcp"
      environment:
        - name: "APP_ENV"
          value: "dev"
        - name: "AWS_DEFAULT_REGION"
          value: "us-west-2"
        - name: "AWS_REGION"
          value: "us-west-2"
        - name: "AWS_SDK_LOAD_CONFIG"
          value: "1"
        - name: "AWS_ENABLE_ENDPOINT_DISCOVERY"
          value: "true"
      secrets:
        - name: "DATABASE_URL"
          valueFrom: "arn:aws:secretsmanager:us-west-2:275416279984:secret:dev/database/matx01/cas-apps/casuser-F2mG3y"
      healthCheck:
        command: ["CMD-SHELL", "curl -f https://localhost:8080/CASSchedulerAdmin/info || exit 1"]
        interval: 30
        timeout: 5
    - name: "permission-container"
      image: "busybox:latest"
      essential: false
      readonlyRootFilesystem: true
      entryPoint: ["sh", "-c"]
      command: ["chmod 0777 /tmp"]
      mountPoints:
        - sourceVolume: "tmp"
          containerPath: "/tmp"
          readOnly: false
        - sourceVolume: "var-lib-amazon"
          containerPath: "/var/lib/amazon"
          readOnly: false
        - sourceVolume: "var-log-amazon"
          containerPath: "/var/log/amazon"
          readOnly: false
  volumes:
    - name: "var-lib-amazon"
    - name: "var-log-amazon"
    - name: "tmp"
    - name: "var-cache-fontconfig"

# --- ECS Service ---
service:
  type: "LOAD_BALANCED"
  desiredCount: 1
  deployment:
    strategy: "ROLLING"
    waitForSteadyState: true
  healthCheckGracePeriodSeconds: 600

# --- Load Balancer ---
loadBalancer:
  type: "APPLICATION"
  scheme: "internet-facing"
  protocol: "HTTPS"
  port: 443
  certificateArn: "arn:aws:acm:us-west-2:275416279984:certificate/87de9dbf-75e1-4fef-badf-834846d72d02"
  targetGroup:
    healthCheckPath: "/CASSchedulerAdmin/info"
    healthCheck:
      enabled: true
      path: "/CASSchedulerAdmin/info"
      healthyHttpCodes: "200"
      interval: 30
      timeout: 5
      healthyThresholdCount: 2
      unhealthyThresholdCount: 3

# --- Auto Scaling ---
autoScaling:
  enabled: true
  minCapacity: 1
  maxCapacity: 2
  metrics:
    - type: "CPUUtilization"
      target: 70
    - type: "MemoryUtilization"
      target: 70

# --- Service Discovery ---
serviceDiscovery:
  namespace: "caserd.local"
  serviceName: "cas-erd-svc"
  dnsType: "A"
  ttl: 60

# --- Add-ons ---
addons:
  logging:
    driver: "awslogs"
    options:
      awslogs-group: "/ecs/cas-erd-svc"
      awslogs-region: "us-west-2"
    retentionDays: 30
  monitoring:
    enableXRay: false
    enableCloudWatchAlarms: true

# --- IAM Roles ---
iam:
  taskRole:
    policies:
      - "AmazonECS_FullAccess"
    permissions:
      secretsManager:
        actions:
          - secretsmanager:GetSecretValue
          - secretsmanager:DescribeSecret
          - secretsmanager:GetResourcePolicy
          - secretsmanager:ListSecretVersionIds
          - secretsmanager:ListSecrets
        resources:
          - arn:aws:secretsmanager:us-west-2:275416279984:secret:*
      cloudWatchLogs:
        actions:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
        resources:
          - "*"
      kms:
        actions:
          - kms:Decrypt
          - kms:DescribeKey
        resources:
          - arn:aws:kms:us-west-2:275416279984:key:*
      sts:
        actions:
          - sts:AssumeRole
        resources:
          - "*"
      s3:
        actions:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
          - s3:ListBucket
        resources:
          - arn:aws:s3:::my-app-bucket
          - arn:aws:s3:::my-app-bucket/*
      sqs:
        actions:
          - sqs:SendMessage
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:GetQueueAttributes
        resources:
          - arn:aws:sqs:us-west-2:275416279984:*
      dynamodb:
        actions:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
        resources:
          - arn:aws:dynamodb:us-west-2:275416279984:table/*
      rds:
        actions:
          - rds-db:connect
        resources:
          - arn:aws:rds-db:us-west-2:275416279984:dbuser:*
      cloudWatchMetrics:
        actions:
          - cloudwatch:PutMetricData
        resources:
          - "*"
  taskExecutionRole:
    policies:
      - "AmazonECSTaskExecutionRolePolicy"
    permissions:
      secretsManager:
        actions:
          - secretsmanager:GetSecretValue
        resources:
          - arn:aws:secretsmanager:us-west-2:275416279984:secret:*
      cloudWatchLogs:
        actions:
          - logs:CreateLogStream
          - logs:PutLogEvents
        resources:
          - "*"
      ecr:
        actions:
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr:GetDownloadUrlForLayer
          - ecr:BatchGetImage
        resources:
          - "*"
      ssm:
        actions:
          - ssm:GetParameters
          - ssm:GetParameter
        resources:
          - "*"
      kms:
        actions:
          - kms:Decrypt
          - kms:DescribeKey
        resources:
          - arn:aws:kms:us-west-2:275416279984:key:*
      sts:
        actions:
          - sts:AssumeRole
        resources:
          - "*" 