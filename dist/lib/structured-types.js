"use strict";
/**
 * Structured types for Helm-like ECS configuration
 * Maps to ECS/AWS resource hierarchies following the design pattern
 */
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,